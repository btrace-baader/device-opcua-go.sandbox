steps:
  #-------------------------------
  # Prepare git & azure environment
  #-------------------------------
  - checkout: self
    displayName: 'Git checkout'
    persistCredentials: true
    submodules: true
    fetchDepth: 0

  #-------------------------------
  # Merging release strategy
  #-------------------------------
  # TODO @Marcos check why this is not working at github / use template again if possible
  - script: | 
      echo variables['System.PullRequest.SourceBranch']
      

  - script: |
      echo merge origin/main into branch $(isReleaseCandidate)
      git config user.email "$(user_email)"
      git config user.name "$(user_name)"
      git merge origin/main
    workingDirectory: $(Build.SourcesDirectory)
    displayName: 'Branch merge main into ReleaseCandidate branch'
    condition: and(succeeded(), eq(variables['isReleaseCandidate'], true))

  - script: |
      echo merge origin/$(System.PullRequest.targetBranchName) into pr $(System.PullRequest.SourceBranch)
      git merge origin/$(System.PullRequest.targetBranchName)
      echo "##vso[task.setvariable variable=extension]$(rc-extension)"
    workingDirectory: $(Build.SourcesDirectory)
    displayName: 'PR merge main into ReleaseCandidate branch'
    condition: and(succeeded(), startsWith(variables['System.PullRequest.SourceBranch'], 'refs/release/'))

  - template: scripts/apply-short-hash.yml@azure-pipeline-template

  #-------------------------------
  # Get tools ready
  #-------------------------------

  - script: |
      sudo apt-get update
      sudo apt-get install -qq -y libtool pkg-config build-essential autoconf automake
      sudo apt-get install -qq -y libzmq3-dev
      ##vso[task.setvariable variable=PKG_CONFIG_PATH]/usr/local/Cellar/zeromq/4.0.4/lib/pkgconfig/
    displayName: Install libzmq

  #-------------------------------
  # Build app service
  #-------------------------------

  - template: scripts/build-and-test-go.yml@azure-pipeline-template

  #-------------------------------
  # Publish test results
  #-------------------------------

  - template: scripts/push-test-results-to-azure.yml@azure-pipeline-template

  #-------------------------------
  # Create executable packages
  #-------------------------------

  - task: CopyFiles@2
    inputs:
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishBuildArtifacts@1
    inputs:
      artifactName: drop
